# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet restore
  displayName: 'dotnet restore'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: dotnet publish -c $(buildConfiguration) -r linux-x64
  displayName: 'dotnet publish $(buildConfiguration)'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: |
    cp $HOME/.nuget/packages/avalonia.skia.linux.natives/1.60.0.1/runtimes/linux-x64/native/libSkiaSharp.so $(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/linux-x64/publish
    cp $HOME/.nuget/packages/tdlib.native/1.3.0/runtimes/linux-x64/native/libtdjson.so $(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/linux-x64/publish
  displayName: 'copy native dependencies'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: |
    tar -cvzf egram-x64.tar.gz --directory=$(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/linux-x64 publish
    cp $(Build.SourcesDirectory)/src/Tel.Egram/*.tar.gz $(Build.ArtifactStagingDirectory)
  displayName: 'archive binaries'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'targz'
    targetPath: $(Build.ArtifactStagingDirectory)