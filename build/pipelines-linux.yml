# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet restore
  displayName: 'dotnet restore'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: dotnet publish -c $(buildConfiguration) -r ubuntu-x64
  displayName: 'dotnet publish $(buildConfiguration)'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: dotnet publish -c $(buildConfiguration) -r opensuse-x64
  displayName: 'dotnet publish $(buildConfiguration)'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: dotnet publish -c $(buildConfiguration) -r fedora-x64
  displayName: 'dotnet publish $(buildConfiguration)'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: dotnet publish -c $(buildConfiguration) -r debian-x64
  displayName: 'dotnet publish $(buildConfiguration)'
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- script: |
    tar -cvzf egram-ubuntu-x64.tar.gz --directory=$(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/ubuntu-x64/publish **/*
    tar -cvzf egram-opensuse-x64.tar.gz --directory=$(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/opensuse-x64/publish **/*
    tar -cvzf egram-fedora-x64.tar.gz --directory=$(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/fedora-x64/publish **/*
    tar -cvzf egram-debian-x64.tar.gz --directory=$(Build.SourcesDirectory)/src/Tel.Egram/bin/$(buildConfiguration)/netcoreapp2.1/debian-x64/publish **/*
    cp $(Build.SourcesDirectory)/src/Tel.Egram/*.tar.gz $(Build.ArtifactStagingDirectory)
  workingDirectory: $(Build.SourcesDirectory)/src/Tel.Egram
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'archives'
    targetPath: $(Build.ArtifactStagingDirectory)